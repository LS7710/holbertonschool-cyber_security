require 'msf/core'

class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::SMB::Client
  include Msf::Auxiliary::Scanner

  def initialize(info = {})
    super(update_info(info,
      'Name'        => 'MS17-010 Vulnerability Checker',
      'Description' => %q{
        Checks if a remote Windows host is vulnerable to MS17-010 (EternalBlue).
      },
      'Author'      => ['Your Name'],
      'License'     => MSF_LICENSE
    ))

    register_options([
      Opt::RHOST()
    ])
  end

  def run_host(ip)
    print_status("Checking #{ip} for MS17-010 vulnerability")

    begin
      connect
      smb_login

      if smb_peer_os =~ /Windows/i && smb_peek_named_pipe
        print_good("#{ip} is vulnerable to MS17-010.")
      else
        print_status("#{ip} does not appear vulnerable.")
      end

    rescue Rex::Proto::SMB::Exceptions::ErrorCode => e
      print_error("#{ip} SMB Error: #{e.message}")
    rescue ::Timeout::Error
      print_error("#{ip} Timeout occurred")
    ensure
      disconnect
    end
  end

  def smb_peek_named_pipe
    tree_connect("\\\\#{rhost}\\IPC$")
    file_id = create_file("\\srvsvc", 'rw')
    peek_named_pipe(file_id)
    true
  rescue
    false
  ensure
    disconnect
  end
end
